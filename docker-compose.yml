services:
  kafka:
    image: apache/kafka-native:latest
    restart: on-failure
    # ports:
    #   - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1

  prometheus:
    image: prom/prometheus:v3.0.1
    volumes:
      - "./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:11.4.0
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./config/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/main.yaml
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards

  postgres:
    image: postgres:16.6-alpine3.20
    # ports:
    #   - "5432:5432"
    restart: on-failure
    volumes:
      - ./message-analyzer/database.sql:/docker-entrypoint-initdb.d/database.sql
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: twitchsentimentanalysis

  chat-reader:
    build: ./chat-reader/
    depends_on:
      - kafka
    restart: on-failure
    ports:
      - "8081:8080"
    environment:
      KAFKA_BROKER_HOST: kafka:9092
      PRODUCTION: true
      TWITCH_CHANNELS: gaules,ale_apoka,ow_esports,kaicenat,ohnePixel,bt0tv,missmikkaa,caseoh_

  create-topics:
    build: ./chat-reader/
    depends_on:
      - kafka
    restart: "no"
    environment:
      KAFKA_BROKER_HOST: kafka:9092
    entrypoint: ["/bin/sh", "-c", "sleep 10 && /app/create-topics"]

  analyzer:
    build: ./message-analyzer/
    depends_on:
      - kafka
      - postgres
    restart: on-failure
    environment:
      KAFKA_BROKER_HOST: kafka:9092
      DATABASE_DATABASE: twitchsentimentanalysis
      DATABASE_USER: postgres
      DATABASE_PASSWORD: mysecretpassword
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432

  website:
    build:
      context: ./website/
      args:
        VITE_WEBSOCKET_URL: ws://localhost:8080/ws
    depends_on:
      - postgres
    restart: on-failure
    ports:
      - "8080:8080"
    environment:
      PRODUCTION: true
      DATABASE_DSN: postgresql://postgres:mysecretpassword@postgres:5432/twitchsentimentanalysis

  # kafdrop:
  #   image: obsidiandynamics/kafdrop:latest
  #   ports:
  #     - "9000:9000"
  #   environment:
  #     KAFKA_BROKERCONNECT: "kafka:9092"
  #   depends_on:
  #     - "kafka"